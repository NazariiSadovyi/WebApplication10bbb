#pragma checksum "C:\Users\Назар\source\repos\WebApplication10bbb\WebApplication10bbb\Pages\Contact.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "68136fc4be05bd84e8b9952ecc0fe12a85a614fd"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(WebApplication10bbb.Pages.Pages_Contact), @"mvc.1.0.razor-page", @"/Pages/Contact.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.RazorPages.Infrastructure.RazorPageAttribute(@"/Pages/Contact.cshtml", typeof(WebApplication10bbb.Pages.Pages_Contact), null)]
namespace WebApplication10bbb.Pages
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#line 1 "C:\Users\Назар\source\repos\WebApplication10bbb\WebApplication10bbb\Pages\_ViewImports.cshtml"
using WebApplication10bbb;

#line default
#line hidden
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"68136fc4be05bd84e8b9952ecc0fe12a85a614fd", @"/Pages/Contact.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"c7574fb0b770ffe3232d9eed76f92d8294fbb019", @"/Pages/_ViewImports.cshtml")]
    public class Pages_Contact : global::Microsoft.AspNetCore.Mvc.RazorPages.Page
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#line 3 "C:\Users\Назар\source\repos\WebApplication10bbb\WebApplication10bbb\Pages\Contact.cshtml"
  
    ViewData["Title"] = "Contact";
    

#line default
#line hidden
            BeginContext(77, 9546, true);
            WriteLiteral(@"
<style>
    #myContainer {
        width: 224px;
        height: 248px;
        background-image: url('images/background.png');
        position: relative;
        
    }

    #pacman {
        width: 8px;
        top: 8px;
        left: 8px;
        height: 8px;
        position: absolute;
        background-color: yellow;
    }

    #blinky {
        top: 112px;
        left: 92px;
        width: 8px;
        height: 8px;
        position: absolute;
        background-color: red;
    }
    #pinky {
        width: 8px;
        top: 112px;
        left: 108px;
        height: 8px;
        position: absolute;
        background-color: pink;
    }
    #clyde {
        width: 8px;
        top: 112px;
        left: 124px;
        height: 8px;
        position: absolute;
        background-color: darkorange;
    }
    .coin {       
        width: 2px;
        height: 2px;
        position: absolute;
        background-color: lawngreen;
    }
    .ground {
       ");
            WriteLiteral(@" width: 2px;
        height: 2px;
        position: absolute;
        background-color: transparent;
    }
    .energizer {
        width: 4px;
        height: 4px;
        position: absolute;
        background-color: mediumblue;
    }
</style>

<p>
    <button id=""sendBtn"">Click Me</button>
</p>

<div id=""myContainer"">
    
    <div class=""coin"" style=""top:11px; left:11px""></div>

</div>

<div>
    <textarea id=""tf"" ></textarea>
</div>

<script src=""js/signalr.min.js""></script>

<script>

    document.getElementById(""myContainer"").style.backgroundSize = ""224px 248px"";

    var map = [
        [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
        [1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1],
        [1, 2, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 2, 1, 1, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 2, 1],
        [1, 3, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 2, 1, 1, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 3, 1],
        [1, 2, 1");
            WriteLiteral(@", 1, 1, 1, 2, 1, 1, 1, 1, 1, 2, 1, 1, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 2, 1],
        [1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1],
        [1, 2, 1, 1, 1, 1, 2, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 2, 1, 1, 1, 1, 2, 1],
        [1, 2, 1, 1, 1, 1, 2, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 2, 1, 1, 1, 1, 2, 1],
        [1, 2, 2, 2, 2, 2, 2, 1, 1, 2, 2, 2, 2, 1, 1, 2, 2, 2, 2, 1, 1, 2, 2, 2, 2, 2, 2, 1],
        [1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 2, 1, 1, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1],
        [4, 4, 4, 4, 4, 1, 2, 1, 1, 1, 1, 1, 2, 1, 1, 2, 1, 1, 1, 1, 1, 2, 1, 4, 4, 4, 4, 4],
        [4, 4, 4, 4, 4, 1, 2, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 2, 1, 4, 4, 4, 4, 4],
        [4, 4, 4, 4, 4, 1, 2, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 2, 1, 4, 4, 4, 4, 4],
        [1, 1, 1, 1, 1, 1, 2, 1, 1, 2, 1, 4, 4, 4, 4, 4, 4, 1, 2, 1, 1, 2, 1, 1, 1, 1, 1, 1],
        [4, 4, 4, 4, 4, 1, 2, 2, 2, 2, 1, 4, 4, 4, 4, 4, 4, 1, 2, 2, 2, 2, 1, 4, 4, 4, 4, ");
            WriteLiteral(@"4],
        [1, 1, 1, 1, 1, 1, 2, 1, 1, 2, 1, 4, 4, 4, 4, 4, 4, 1, 2, 1, 1, 2, 1, 1, 1, 1, 1, 1],
        [4, 4, 4, 4, 4, 1, 2, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 2, 1, 4, 4, 4, 4, 4],
        [4, 4, 4, 4, 4, 1, 2, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 2, 1, 4, 4, 4, 4, 4],
        [4, 4, 4, 4, 4, 1, 2, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 2, 1, 4, 4, 4, 4, 4],
        [1, 1, 1, 1, 1, 1, 2, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 2, 1, 1, 1, 1, 1, 1],
        [1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1],
        [1, 2, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 2, 1, 1, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 2, 1],
        [1, 2, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 2, 1, 1, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 2, 1],
        [1, 3, 2, 2, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 2, 2, 3, 1],
        [1, 1, 1, 2, 1, 1, 2, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 2, 1, 1, 2, 1, 1, 1],
        [1, 1, 1, 2, 1, 1, 2, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, ");
            WriteLiteral(@"1, 2, 1, 1, 2, 1, 1, 1],
        [1, 2, 2, 2, 2, 2, 2, 1, 1, 2, 2, 2, 2, 1, 1, 2, 2, 2, 2, 1, 1, 2, 2, 2, 2, 2, 2, 1],
        [1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1],
        [1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1],
        [1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1],
        [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],

    ];

    var el = document.getElementById('myContainer');

    function drawWorld() {
        el.innerHTML = '';
        for (var y = 0; y < map.length; y = y + 1) {
            for (var x = 0; x < map[y].length; x = x + 1) {
                if (map[y][x] === 2) {
                    var yy = y * 8 + 3;
                    var xx = x * 8 + 3;
                    el.innerHTML += '<div id=""' + y + ""o"" + x + '"" class=""coin"" style=""top:'+ yy + 'px; left:' + xx + 'px""></div>';
                }else if (map");
            WriteLiteral(@"[y][x] === 3) {
                    var yy = y * 8 + 2;
                    var xx = x * 8 + 2;
                    el.innerHTML += '<div id=""' + y + ""o"" + x + '"" class=""energizer"" style=""top:' + yy + 'px; left:' + xx + 'px""></div>';
                }
            }
            el.innerHTML += ""<br>"";
        }

        el.innerHTML += '<div id=""pacman""></div>';
        el.innerHTML += '<div id=""blinky""></div>';
        el.innerHTML += '<div id=""pinky""></div>';
        el.innerHTML += '<div id=""clyde""></div>';
    }
    
    drawWorld();

    current_pacman = {
        x: 1,
        y: 1
    }

    let hubUrl = 'https://localhost:44379/stocks';
    const hubConnection = new signalR.HubConnectionBuilder()
        .withUrl(hubUrl)
        .configureLogging(signalR.LogLevel.Information)
        .build();
    hubConnection.start();

    document.getElementById(""sendBtn"").addEventListener(""click"", function (e) {
        hubConnection.invoke(""StartGame"");
    });

    document.onkeyd");
            WriteLiteral(@"own = function (event) {

        if (event.keyCode === 37) {

            hubConnection.invoke(""MovePacmen"", 4);

        }
        else if (event.keyCode === 38) {

            hubConnection.invoke(""MovePacmen"", 8);

        }
        else if (event.keyCode === 39) {

            hubConnection.invoke(""MovePacmen"", 6);

        }
        else if (event.keyCode === 40) {

            hubConnection.invoke(""MovePacmen"", 2);

        }

    };
       
    previos_pacman = {
        x: 8,
        y: 8
    }

    hubConnection.on(""ChangePacmanPosition"", function (pacman_x, pacman_y, score) {
                
        var elem = document.getElementById(""pacman"");

        var some_coin = document.getElementById(pacman_x + ""o"" + pacman_y);
        some_coin.className = 'ground';

        //if (previos_pacman.y < pacman_y)
        //{
        //    var a = previos_pacman.x;
        //    myMovee(pacman_x, pacman_y, previos_pacman.y);
        //}

        //previos_pacman.x = ");
            WriteLiteral(@"pacman_x;
        //previos_pacman.y = pacman_y;

        document.getElementById('tf').textContent = score;

        elem.style.top = pacman_x*8 + 'px';
        elem.style.left = pacman_y*8 + 'px';
    });

    hubConnection.on(""ChangeBlinkyPosition"", function (blinky_x, blinky_y, IsFrightened) {

        var blinky = document.getElementById(""blinky"");

        if (IsFrightened == true) {
            blinky.style.backgroundColor = 'darkblue';
        } else {
            blinky.style.backgroundColor = 'red';
        }

        blinky.style.top = blinky_x * 8 + 'px';
        blinky.style.left = blinky_y * 8 + 'px';
    });

    hubConnection.on(""ChangePinkyPosition"", function (pinky_x, pinky_y, IsFrightened) {

        var pinky = document.getElementById(""pinky"");

        if (IsFrightened == true) {
            pinky.style.backgroundColor = 'darkblue';
        } else {
            pinky.style.backgroundColor = 'pink';
        }

        pinky.style.top = pinky_x * 8 + 'px';
");
            WriteLiteral(@"        pinky.style.left = pinky_y * 8 + 'px';
    });

    hubConnection.on(""ChangeClydePosition"", function (clyde_x, clyde_y, IsFrightened) {

        var clyde = document.getElementById(""clyde"");

        if (IsFrightened == true) {
            clyde.style.backgroundColor = 'darkblue';
        } else {
            clyde.style.backgroundColor = 'darkorange';
        }

        clyde.style.top = clyde_x * 8 + 'px';
        clyde.style.left = clyde_y * 8 + 'px';
    });

    hubConnection.on(""EndGame"", function () {
        alert(""You win!"");
    });

    function myMovee(x, y, previos) {

        document.getElementById('tf').textContent = previos;

        var pac = document.getElementById('pacman');
        var conte = document.getElementById('myContainer');
        var px = document.getElementById(""pacman"").style.top;
        var py = document.getElementById(""pacman"").style.left;
                
        var xx = x * 8 - 8;
        var yy = y * 8 - 8;

        var pos = 0;");
            WriteLiteral(@"
        var id = setInterval(frame, 10);
        function frame() {
            if (pos == 8) {
                clearInterval(id);
            } else {
                pos++;
                yyy = yy + pos;
                
                pac.style.left =yyy  + 'px';
            }
        }
    }
    
</script>
");
            EndContext();
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<ContactModel> Html { get; private set; }
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary<ContactModel> ViewData => (global::Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary<ContactModel>)PageContext?.ViewData;
        public ContactModel Model => ViewData.Model;
    }
}
#pragma warning restore 1591
