#pragma checksum "C:\Users\Назар\source\repos\WebApplication10bbb\WebApplication10bbb\Pages\Contact.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "a148b1c7bdc1173fa55d3abf1fafb086ef1cefc6"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(WebApplication10bbb.Pages.Pages_Contact), @"mvc.1.0.razor-page", @"/Pages/Contact.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.RazorPages.Infrastructure.RazorPageAttribute(@"/Pages/Contact.cshtml", typeof(WebApplication10bbb.Pages.Pages_Contact), null)]
namespace WebApplication10bbb.Pages
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#line 1 "C:\Users\Назар\source\repos\WebApplication10bbb\WebApplication10bbb\Pages\_ViewImports.cshtml"
using WebApplication10bbb;

#line default
#line hidden
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"a148b1c7bdc1173fa55d3abf1fafb086ef1cefc6", @"/Pages/Contact.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"c7574fb0b770ffe3232d9eed76f92d8294fbb019", @"/Pages/_ViewImports.cshtml")]
    public class Pages_Contact : global::Microsoft.AspNetCore.Mvc.RazorPages.Page
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#line 3 "C:\Users\Назар\source\repos\WebApplication10bbb\WebApplication10bbb\Pages\Contact.cshtml"
  
    ViewData["Title"] = "Contact";    

#line default
#line hidden
            BeginContext(75, 16130, true);
            WriteLiteral(@"


<style>
    #myContainer {
        width: 224px;
        height: 248px;
        background-image: url('images/background.png');
        position: relative;
        
    }

    #pacman {
        width: 8px;
        top: 8px;
        left: 8px;
        height: 8px;
        position: absolute;
        background-color: yellow;
    }

    #blinky {
        top: 112px;
        left: 92px;
        width: 8px;
        height: 8px;
        position: absolute;
        background-color: red;
    }

    #inky {
        top: 112px;
        left: 92px;
        width: 8px;
        height: 8px;
        position: absolute;
        background-color: deepskyblue;
    }

    #pinky {
        width: 8px;
        top: 112px;
        left: 108px;
        height: 8px;
        position: absolute;
        background-color: pink;
    }
    #clyde {
        width: 8px;
        top: 112px;
        left: 124px;
        height: 8px;
        position: absolute;
        background-colo");
            WriteLiteral(@"r: darkorange;
    }
    .coin {       
        width: 2px;
        height: 2px;
        position: absolute;
        background-color: lawngreen;
    }
    .ground {
        width: 2px;
        height: 2px;
        position: absolute;
        background-color: transparent;
    }
    .energizer {
        width: 4px;
        height: 4px;
        position: absolute;
        background-color: mediumblue;
    }
</style>

<p>
    <button id=""sendBtn"">Click Me</button>
    <button id=""pause"">Pause</button>
    <input id=""login"" type=""text"">
</p>

<div id=""myContainer"">
    
    <div class=""coin"" style=""top:11px; left:11px""></div>

</div>

<div>
    <textarea id=""tf"" ></textarea>
</div>

<script src=""js/signalr.min.js""></script>

<script>

    document.getElementById(""myContainer"").style.backgroundSize = ""224px 248px"";

    var map = [
        [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
        [1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,");
            WriteLiteral(@" 2, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1],
        [1, 2, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 2, 1, 1, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 2, 1],
        [1, 3, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 2, 1, 1, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 3, 1],
        [1, 2, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 2, 1, 1, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 2, 1],
        [1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1],
        [1, 2, 1, 1, 1, 1, 2, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 2, 1, 1, 1, 1, 2, 1],
        [1, 2, 1, 1, 1, 1, 2, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 2, 1, 1, 1, 1, 2, 1],
        [1, 2, 2, 2, 2, 2, 2, 1, 1, 2, 2, 2, 2, 1, 1, 2, 2, 2, 2, 1, 1, 2, 2, 2, 2, 2, 2, 1],
        [1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 2, 1, 1, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1],
        [4, 4, 4, 4, 4, 1, 2, 1, 1, 1, 1, 1, 2, 1, 1, 2, 1, 1, 1, 1, 1, 2, 1, 4, 4, 4, 4, 4],
        [4, 4, 4, 4, 4, 1, 2, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 2, 1, 4, 4, 4, 4, 4],
        [4, 4, 4, 4, 4,");
            WriteLiteral(@" 1, 2, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 2, 1, 4, 4, 4, 4, 4],
        [1, 1, 1, 1, 1, 1, 2, 1, 1, 2, 1, 4, 4, 4, 4, 4, 4, 1, 2, 1, 1, 2, 1, 1, 1, 1, 1, 1],
        [4, 4, 4, 4, 4, 1, 2, 2, 2, 2, 1, 4, 4, 4, 4, 4, 4, 1, 2, 2, 2, 2, 1, 4, 4, 4, 4, 4],
        [1, 1, 1, 1, 1, 1, 2, 1, 1, 2, 1, 4, 4, 4, 4, 4, 4, 1, 2, 1, 1, 2, 1, 1, 1, 1, 1, 1],
        [4, 4, 4, 4, 4, 1, 2, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 2, 1, 4, 4, 4, 4, 4],
        [4, 4, 4, 4, 4, 1, 2, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 2, 1, 4, 4, 4, 4, 4],
        [4, 4, 4, 4, 4, 1, 2, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 2, 1, 4, 4, 4, 4, 4],
        [1, 1, 1, 1, 1, 1, 2, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 2, 1, 1, 1, 1, 1, 1],
        [1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1],
        [1, 2, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 2, 1, 1, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 2, 1],
        [1, 2, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 2, 1, 1, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 2, 1],
  ");
            WriteLiteral(@"      [1, 3, 2, 2, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 2, 2, 3, 1],
        [1, 1, 1, 2, 1, 1, 2, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 2, 1, 1, 2, 1, 1, 1],
        [1, 1, 1, 2, 1, 1, 2, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 2, 1, 1, 2, 1, 1, 1],
        [1, 2, 2, 2, 2, 2, 2, 1, 1, 2, 2, 2, 2, 1, 1, 2, 2, 2, 2, 1, 1, 2, 2, 2, 2, 2, 2, 1],
        [1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1],
        [1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1],
        [1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1],
        [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],

    ];

    var el = document.getElementById('myContainer');

    function drawWorld() {
        el.innerHTML = '';
        for (var y = 0; y < map.length; y = y + 1) {
            for (var x = 0; x < map[y].length; x = x + 1) {
                if (map[y][");
            WriteLiteral(@"x] === 2) {
                    var yy = y * 8 + 3;
                    var xx = x * 8 + 3;
                    el.innerHTML += '<div id=""' + y + ""o"" + x + '"" class=""coin"" style=""top:'+ yy + 'px; left:' + xx + 'px""></div>';
                }else if (map[y][x] === 3) {
                    var yy = y * 8 + 2;
                    var xx = x * 8 + 2;
                    el.innerHTML += '<div id=""' + y + ""o"" + x + '"" class=""energizer"" style=""top:' + yy + 'px; left:' + xx + 'px""></div>';
                }
            }
            el.innerHTML += ""<br>"";
        }

        el.innerHTML += '<div id=""pacman""></div>';
        el.innerHTML += '<div id=""blinky""></div>';
        el.innerHTML += '<div id=""pinky""></div>';
        el.innerHTML += '<div id=""clyde""></div>';
        el.innerHTML += '<div id=""inky""></div>';
    }
    
    drawWorld();

    current_pacman = {
        x: 1,
        y: 1
    }

    let hubUrl = 'https://localhost:44379/stocks';
    const hubConnection = new signalR.HubC");
            WriteLiteral(@"onnectionBuilder()
        .withUrl(hubUrl)
        .configureLogging(signalR.LogLevel.Information)
        .build();
    hubConnection.start();

    document.getElementById(""sendBtn"").addEventListener(""click"", function (e) {
        hubConnection.invoke(""StartGame"");
    });

    document.onkeydown = function (event) {

        if (event.keyCode === 37) {

            hubConnection.invoke(""MovePacmen"", 4);

        }
        else if (event.keyCode === 38) {

            hubConnection.invoke(""MovePacmen"", 8);

        }
        else if (event.keyCode === 39) {

            hubConnection.invoke(""MovePacmen"", 6);

        }
        else if (event.keyCode === 40) {

            hubConnection.invoke(""MovePacmen"", 2);

        }

    };
       
    previos_pacman = {
        x: 8,
        y: 8
    }

    previos_blinky = {
        x: 11,
        y: 13
    }

    previos_pinky = {
        x: 11,
        y: 13
    }

    previos_clydi = {
        x: 11,
        y: ");
            WriteLiteral(@"13
    }

    previos_inky = {
        x: 11,
        y: 13
    }

    hubConnection.on(""ChangePacmanPosition"", function (pacman_x, pacman_y, score) {
                
        var elem = document.getElementById(""pacman"");

        var some_coin = document.getElementById(pacman_x + ""o"" + pacman_y);
        some_coin.className = 'ground';

        ObjectMove(pacman_x, pacman_y, previos_pacman.x, previos_pacman.y, elem.id, 12);
        
        previos_pacman.x = pacman_x;
        previos_pacman.y = pacman_y;

        document.getElementById('tf').textContent = score;

        //elem.style.top = pacman_x*8 + 'px';
        //elem.style.left = pacman_y*8 + 'px';
    });

    hubConnection.on(""ChangeBlinkyPosition"", function (blinky_x, blinky_y, IsFrightened, MovingToHome) {

        var blinky = document.getElementById(""blinky"");

        var time = 15;

        if (MovingToHome == true)
        {
            blinky.style.backgroundColor = 'white';
            time = 6;
        ");
            WriteLiteral(@"}
        else if (IsFrightened == true)
        {
            blinky.style.backgroundColor = 'darkblue';
            time = 37;
        }
        else {
            time = 15;
            blinky.style.backgroundColor = 'red';
        }

        ObjectMove(blinky_x, blinky_y, previos_blinky.x, previos_blinky.y, blinky.id, time);

        previos_blinky.x = blinky_x;
        previos_blinky.y = blinky_y;

    });

    hubConnection.on(""ChangePinkyPosition"", function (pinky_x, pinky_y, IsFrightened, MovingToHome) {

        var pinky = document.getElementById(""pinky"");

        var time = 15;

        if (MovingToHome == true) {
            pinky.style.backgroundColor = 'white';
            time = 6;
        }
        else if (IsFrightened == true) {
            pinky.style.backgroundColor = 'darkblue';
            time = 37;
        }
        else {
            time = 15;
            pinky.style.backgroundColor = 'pink';
        }

        ObjectMove(pinky_x, pinky_y, previo");
            WriteLiteral(@"s_pinky.x, previos_pinky.y, pinky.id, time);

        previos_pinky.x = pinky_x;
        previos_pinky.y = pinky_y;
    });

    hubConnection.on(""ChangeInkyPosition"", function (inky_x, inky_y, IsFrightened, MovingToHome) {

        var inky = document.getElementById(""inky"");

        var time = 15;

        if (MovingToHome == true) {
            inky.style.backgroundColor = 'white';
            time = 6;
        }
        else if (IsFrightened == true) {
            inky.style.backgroundColor = 'darkblue';
            time = 37;
        }
        else {
            time = 15;
            inky.style.backgroundColor = 'deepskyblue';
        }

        ObjectMove(inky_x, inky_y, previos_inky.x, previos_inky.y, inky.id, time);

        previos_inky.x = inky_x;
        previos_inky.y = inky_y;
    });


    hubConnection.on(""ChangeClydePosition"", function (clyde_x, clyde_y, IsFrightened, MovingToHome) {

        var clyde = document.getElementById(""clyde"");
               
   ");
            WriteLiteral(@"     var time = 15;

        if (MovingToHome == true) {
            clyde.style.backgroundColor = 'white';
            time = 6;
        }
        else if (IsFrightened == true) {
            clyde.style.backgroundColor = 'darkblue';
            time = 37;
        }
        else {
            time = 15;
            clyde.style.backgroundColor = 'darkorange';
        }

        ObjectMove(clyde_x, clyde_y, previos_clydi.x, previos_clydi.y, clyde.id, time);

        previos_clydi.x = clyde_x;
        previos_clydi.y = clyde_y;
    });

    hubConnection.on(""EndGame"", function () {
        alert(""You win!"");
    });

    var p = false;

    document.getElementById(""pause"").addEventListener(""click"", function (e) {
        if (p) {
            p = false;
            document.getElementById(""pause"").textContent = ""Unpause"";
        }
        else {
            p = true;
            document.getElementById(""pause"").textContent = ""Pause"";
        }
        hubConnection.invoke(""Pa");
            WriteLiteral(@"use"");
    });

    function ObjectMove(x, y, px, py, object_id, time) {

        var object = document.getElementById(object_id);
        
        if (py < y)
        {
            var yy = y * 8 - 8;

            var pos = 0;
            var id = setInterval(frame, time);
            function frame() {
                if (pos == 8) {
                    clearInterval(id);
                } else {
                    pos++;
                    yyy = yy + pos;
                    object.style.left = yyy + 'px';
                }
            }
        }
        else if (py > y)
        {           
            var yy = y * 8 + 8;

            var pos = 0;
            var id = setInterval(frame, time);
            function frame() {
                if (pos == 8) {
                    clearInterval(id);
                } else {
                    pos++;
                    yyy = yy - pos;

                    object.style.left = yyy + 'px';
                }
            }
");
            WriteLiteral(@"        }
        else if (px < x)
        {
            var xx = x * 8 - 8; 
            var pos = 0;
            var id = setInterval(frame, time);
            function frame() {
                if (pos == 8) {
                    clearInterval(id);
                } else {
                    pos++;
                    xxx = xx + pos;
                    object.style.top = xxx + 'px';
                }
            }
        }
        else if (px > x)
        {
            var xx = x * 8 + 8;
            var pos = 0;
            var id = setInterval(frame, time);
            function frame() {
                if (pos == 8) {
                    clearInterval(id);
                } else {
                    pos++;
                    xxx = xx - pos;
                    object.style.top = xxx + 'px';
                }
            }
        }

        
    }

    function myMoveLeft(x, y) {

        //document.getElementById('tf').textContent = previos;

        var pac ");
            WriteLiteral(@"= document.getElementById('pacman');
        //var conte = document.getElementById('myContainer');
        //var px = document.getElementById(""pacman"").style.top;
        //var py = document.getElementById(""pacman"").style.left;
                
        var yy = y * 8 - 8;

        var pos = 0;
        var id = setInterval(frame, 12);
        function frame() {
            if (pos == 8) {
                clearInterval(id);
            } else {
                pos++;
                yyy = yy + pos;
                
                pac.style.left =yyy  + 'px';
            }
        }
    }

    function myMoveRight(x, y, previos) {

        document.getElementById('tf').textContent = previos;

        var pac = document.getElementById('pacman');
        var conte = document.getElementById('myContainer');
        var px = document.getElementById(""pacman"").style.top;
        var py = document.getElementById(""pacman"").style.left;

        var xx = x * 8 + 8;
        var yy = y * 8 + 8");
            WriteLiteral(@";

        var pos = 0;
        var id = setInterval(frame, 11);
        function frame() {
            if (pos == 8) {
                clearInterval(id);
            } else {
                pos++;
                yyy = yy - pos;

                pac.style.left = yyy + 'px';
            }
        }
    }

    function myMoveBottom(x, y, previos) {

        document.getElementById('tf').textContent = previos;

        var pac = document.getElementById('pacman');
        var conte = document.getElementById('myContainer');
        var px = document.getElementById(""pacman"").style.top;
        var py = document.getElementById(""pacman"").style.left;

        var xx = x * 8 - 8;
        var yy = y * 8 - 8;

        var pos = 0;
        var id = setInterval(frame, 11);
        function frame() {
            if (pos == 8) {
                clearInterval(id);
            } else {
                pos++;
                xxx = xx + pos;

                pac.style.top = xxx + 'px';
   ");
            WriteLiteral(@"         }
        }
    }

    function myMoveTop(x, y, previos) {

        document.getElementById('tf').textContent = previos;

        var pac = document.getElementById('pacman');
        var conte = document.getElementById('myContainer');
        var px = document.getElementById(""pacman"").style.top;
        var py = document.getElementById(""pacman"").style.left;

        var xx = x * 8 + 8;
        var yy = y * 8 + 8;

        var pos = 0;
        var id = setInterval(frame, 11);
        function frame() {
            if (pos == 8) {
                clearInterval(id);
            } else {
                pos++;
                xxx = xx - pos;

                pac.style.top = xxx + 'px';
            }
        }
    }
</script>
");
            EndContext();
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<ContactModel> Html { get; private set; }
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary<ContactModel> ViewData => (global::Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary<ContactModel>)PageContext?.ViewData;
        public ContactModel Model => ViewData.Model;
    }
}
#pragma warning restore 1591
